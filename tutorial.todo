Tools:
 ☐ My browser is the first tool to have (obviously) 
 ☐ browser ==== dev tools (ctrl + i)
 ☐ https://github.com/facebook/react-devtools
 ☐ Download the chrome extension
 ☐ Will show in ctrl+i (browser) a React tab

Running test:
 ☐ yarn test
 ☐ npm run test

Type checking:
 ☐ yarn  add flow-bin -D
 ☐ add to package.json-scripts "flow": "flow"
 ☐ yarn flow init
   ☐ This will create a file .flowconfig
 ☐ // @flow 
   ☐ Add on the top in each .jsx file that I want to type check with flow
 ☐ yarn flow
 ☐ to run flow in my shell

Linter:
 ☐ yarn add eslint eslint-config-airbnb eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react
 ☐ create file .eslintrc.json
{
    "extends": "airbnb",
    "plugins": [
        "react",
        "jsx-a11y",
        "import"
    ]
}

Testing with jest:
 ☐ yarn add --dev jest
 ☐ Create a App.test.js
 ☐ see screenshot
 ☐ yarn test (npm run test)
 ☐ see documentation of Jest for testing Number, Object, String
 ☐ how test work in yarn test
 ☐ First line is the number of Test files
 ☐ The second line is the total number of test contains in the test files
 ☐ I need to read the Doc for JEst
 ☐ https://facebook.github.io/jest/docs/en/using-matchers.html#content

Snapshot:
 ☐ A Snapshot is a copy of the components that react do. (it;s like versionning with Git)
 ☐ Add snapchot : yarn add react-test-renderer
 ☐ add this into the main file **import renderer from 'react-test-renderer';**
 ☐ Create a test. see screenshot
 ☐ run test
 ☐ change something in the Component
 ☐ type "u" in the shell to update the snapshot

Describe:
 ☐ I can add a **describe** to categorize my tests
 ☐ in the terminal type **p** and the name of the file that I want to Test **Grid** and if I want to tests all my files **a** to go back.
 ☐ Coverage add **"coverage": "react-scripts test --env=jsdom --coverage",** in package.json. 
 ☐ run **npm run coverage**